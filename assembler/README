ASSEMBLER
15 Feb 2011

De novo sequence assembler for short mate paired reads (70+ bp).

=== PREREQ ===

You need zlib (dev), liblog4cxx and google-sparsehash installed in your system.

In Ubuntu it's simple:
 
> sudo apt-get install zlib1g-dev

> sudo apt-get install liblog4cxx10-dev

> sudo apt-get install sparsehash

# or do the following:
#> cd ./assembler/src/libs/sparsehash-1.10/
#> ./configure
#> make
#> sudo make install
#> make clean

=== INSTALLATION ===

With a GNU environment (g++, make):

> make

=== USAGE ===

For usual de Bruijn graph run:

> ./build/debruijn/debruijn

For A-Bruijn graph run:

> ./build/abruijn/abruijn

For Paired de Bruijn graph run:

> ./build/paireddebruijn/paireddebruijn


#ERROR CORRECTION:
#
#> ./assember-ec [-i `indir`] [-o `outdir`]
#
#Inputs mate paired reads from `indir` (default "data"), corrects errors etc.
#Outputs corrected mate paired reads to `outdir` (default "data-ec").
#
#ASSEMBLY:
#
#> ./assembler [-i `indir`] [-o `outfile`] [-s]
#
#Inputs mate paired reads from `indir` (default "data-ec"), builds de Bruijn graph, simplifies it etc..
#Outputs final de Bruijn graph to `outfile` (default "assembly.out").
#
#If -s key presented then outputs linear sequence of contigs (scaffold), but not the graph.

=== CODE STYLE ===

I'm using Google C++ Style Guide: http://google-styleguide.googlecode.com/svn/trunk/cppguide.xml .

#=== P.S. ===
#
#It's good idea to make ./assembler-sf (scaffolder) as separate utility program.

// This README was updated 26 Feb 2011
